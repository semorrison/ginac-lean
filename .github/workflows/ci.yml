name: GinacLean CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

jobs:
  lean4:
    name: ginac-lean
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # , windows-latest]
      fail-fast: false
    steps:
      - name: install elan
        run: |
          set -o pipefail
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | bash -s -- -y
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.6.1
        with:
          python-version: 3.x
      - name: Set up cache for deps
        uses: actions/cache@v3
        with:
          path: build
          key: cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            cache-${{ runner.os }}-
      - name: package install
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt update
            sudo apt install -y curl wget git git-lfs clang lld libc++-dev
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "Running on macOS"
          else
            echo "Unsupported OS"
          fi
      - name: pip install
        run: |
          pip install -r codegen/requirements.txt -r codegen/requirements-dev.txt -r codegen/requirements-tests.txt
      - name: run pre-commit
        run: |
          pre-commit run --all-files
      - name: build ginac
        run: |
          bash scripts/build_ginac.sh
      - name: run codegen tests
        run: |
          pytest codegen/tests
      - name: check ginac
        run: |
          bash scripts/check_ginac.sh
      - name: lake build
        run: |
          lake run clear
          lake build
      - name: lake upload
        if: github.event_name == 'release'
        run: |
          lake upload ${{ github.ref }}

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ./dist

  # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: lean4
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1
