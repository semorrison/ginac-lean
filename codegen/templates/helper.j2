{% macro add_sep(loop, sep) %}
{% if loop.last %}{% else %}{{sep}}{% endif %}
{%- endmacro %}

{% macro maybe(sep, test_subject) %}
{% if test_subject | length > 0 %}{{sep}}{% endif %}
{%- endmacro %}

{% macro lean_arg(own) %}
{% if own %}lean_obj_arg{% else %}b_lean_obj_arg{% endif %}
{%- endmacro %}

{% macro arg(name) %}
_arg_{{name|replace('::', '_')}}
{%- endmacro %}

{% macro ret(name) %}
_ret_{{name|replace('::', '_')}}
{%- endmacro %}

{% macro list_params_call_cpp(params, indent_level=2, indent_threshold=1) %}
{% if params|length > indent_threshold %}
{% set sep = joiner(",\n" ~ "    " * indent_level) %}
{% else %}
{% set sep = joiner(", ") %}
{%- endif %}
{% for param in params %}
{{ sep() }}{{ param.type.from_lean|format(arg(param.name))}}
{%- endfor %}
{%- endmacro %}

{% macro list_sig_params_cpp(params, indent_level=2, indent_threshold=1) %}
{% if params|length > indent_threshold %}
{% set indent_width = 4 * indent_level %}
{% set sep = joiner(",\n")%}
{% else %}
{% set indent_width = 0 %}
{% set sep = joiner(", ") %}
{%- endif %}
{% filter indent(width=4 * indent_level) %}
{% for param in params %}
{{ sep() }}{{ lean_arg(param.own) }} {{arg(param.name)}}
{%- endfor %}
{% endfilter %}
{%- endmacro %}

{% macro list_sig_params_lean(params) %}
{% set sep = joiner(" ") %}
{% for param in params %}
{{ sep() }}({{param.name}} : {{param.type.lean}})
{%- endfor %}
{%- endmacro %}